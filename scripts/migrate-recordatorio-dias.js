const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function migrateRecordatorios() {
  try {
    console.log('üîÑ Iniciando migraci√≥n de recordatorios...');
    
    // Obtener todos los recordatorios existentes
    const recordatorios = await prisma.recordatorioAgenda.findMany();
    
    console.log(`üìä Total de recordatorios: ${recordatorios.length}`);
    
    // Convertir minutos a d√≠as (asumiendo que si es >= 1440 minutos = 1 d√≠a)
    for (const recordatorio of recordatorios) {
      // Calcular d√≠as bas√°ndose en minutos
      // Si minutosAntes >= 1440 (1 d√≠a), convertirlo a d√≠as
      // Si es menos de 1440, considerarlo "mismo d√≠a" (0)
      let diasAntes = 0;
      
      if (recordatorio.minutosAntes >= 1440) {
        diasAntes = Math.floor(recordatorio.minutosAntes / 1440);
        // Limitar a m√°ximo 5 d√≠as
        if (diasAntes > 5) diasAntes = 5;
      }
      
      console.log(`  ‚îî‚îÄ Recordatorio ${recordatorio.id}: ${recordatorio.minutosAntes} minutos ‚Üí ${diasAntes} d√≠as`);
      
      // Actualizar con el nuevo campo diasAntes
      await prisma.$executeRaw`
        UPDATE recordatorios_agenda 
        SET "diasAntes" = ${diasAntes}
        WHERE id = ${recordatorio.id}
      `;
    }
    
    console.log('‚úÖ Migraci√≥n completada exitosamente');
    
  } catch (error) {
    console.error('‚ùå Error durante la migraci√≥n:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

migrateRecordatorios();


