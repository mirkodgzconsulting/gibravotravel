generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  phoneNumber String?
  photo       String?
  role        UserRole @default(USER)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}

model Departure {
  id            String    @id @default(cuid())
  title         String
  description   String?
  departureDate DateTime
  returnDate    DateTime?
  price         Float?
  capacity      Int?
  available     Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("departures")
}

model Info {
  id        String   @id @default(cuid())
  title     String
  content   String
  category  String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("info")
}

model Route {
  id          String      @id @default(cuid())
  name        String
  description String?
  distance    Float?
  duration    Int?
  active      Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  stops       RouteStop[]

  @@map("routes")
}

model Stop {
  id         String      @id @default(cuid())
  name       String
  address    String?
  latitude   Float?
  longitude  Float?
  active     Boolean     @default(true)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  routeStops RouteStop[]

  @@map("stops")
}

model RouteStop {
  id      String @id @default(cuid())
  routeId String
  stopId  String
  order   Int
  route   Route  @relation(fields: [routeId], references: [id], onDelete: Cascade)
  stop    Stop   @relation(fields: [stopId], references: [id], onDelete: Cascade)

  @@unique([routeId, stopId])
  @@map("route_stops")
}

enum UserRole {
  USER
  ADMIN
  TI
}
